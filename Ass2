import pandas as pd
import numpy as np
import statistics

data={'Name':['Vaibhav','Hritik','Shreyash','Shubham','Prayshee','Snehal'],
      'Age':[12,17,22,18,24,30],
      'Gender':['M','M','M','M','F','F'],
      'Marks':[70,56,89,67,67,78],
      'PhD':['Y','Y','N','Y','N','Y']
      }
df=pd.DataFrame(data)
df


##########################################################################################3


data2={'Name':['Vaibhav','Hritik','Shreyash','Shubham','Sam','Snehal'],
      'Age':[12,17,22,18,np.NaN,30],
      'Gender':['M','M','N/a','M','F','na'],
      'Marks':[70,56,89,np.nan,67,78],
      'PhD':['Y','Y','N',15,'N',np.nan]
}
df2=pd.DataFrame(data2)
df2



##########################################################################################3


print (df2['Age'])
print(df2['Age'].isnull())



##########################################################################################3



print(df2['Gender'])
print(df2['Gender'].isnull())



##########################################################################################3


print(df2['PhD'])
print(df2['PhD'].isnull())



##########################################################################################3



cnt=0
for row in df2['PhD']:
  try:
    int(row)
    df2.loc[cnt,'PhD']=np.nan
  except ValueError:
    pass
  cnt+=1
print(df2['PhD'])
print(df2['PhD'].isnull())



##########################################################################################3


import seaborn as sns
import matplotlib.pyplot as plt
sns.boxplot(x=df['Age'])


##########################################################################################3

print(np.where(df['Age']>20))


##########################################################################################3


fig,x=plt.subplots(figsize=(8,6))
ax=plt.hist(df['Age'],bins=30,color='g',edgecolor='w')
plt.title('Histogram')
plt.show()


##########################################################################################3



fig,ax=plt.subplots(figsize=(5,5))
ax.scatter(df['Age'],df['Marks'])

#x-axis label
ax.set_xlabel('Age')

#y- axis label
ax.set_ylabel('Marks')
plt.show()



##########################################################################################3


df['Log_Age']=np.log(df['Age'])
df



##########################################################################################3


df['Log_Age'].plot.hist(bins=5)


##########################################################################################3


df_scaled=df.copy()
col=['Age','Marks']
features=df_scaled[col]
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
df_scaled[col]=scaler.fit_transform(features.values)
df_scaled


##########################################################################################3










