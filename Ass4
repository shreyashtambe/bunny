########################################################################

from google.colab import files
uploaded=files.upload()

########################################################################

import pandas as pd
import numpy as np

########################################################################

df=pd.read_csv("Boston.csv")
df

########################################################################

df.isnull().sum()

########################################################################

df_x=pd.DataFrame(np.c_[df['lstat'],df['rm']],columns=['lstat','rm'])

########################################################################

df_y=df['medv']

########################################################################

from sklearn import linear_model
from sklearn.model_selection import train_test_split
reg=linear_model.LinearRegression()

########################################################################

x_train,x_test,y_train,y_test=train_test_split(df_x,df_y,train_size=0.67,random_state=True)

########################################################################

reg.fit(x_train,y_train)

########################################################################

print(reg.coef_)

########################################################################

y_pred=reg.predict(x_test)

########################################################################

print(y_pred)

########################################################################

y_pred[2]

########################################################################

y_test[5]

########################################################################

#print(np.mean(y_pred -y_test)**2)
print(np.square(np.subtract(y_test,y_pred)).mean())

########################################################################

from sklearn.metrics import mean_squared_error
print(mean_squared_error(y_test,y_pred))

########################################################################








